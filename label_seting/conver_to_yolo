import cv2
import os

def convert_to_yolo_format(image_folder, annotation_folder, class_index, output_folder):
    # image_folder: 이미지 파일들이 있는 폴더의 경로
    # annotation_folder: 어노테이션 파일들을 저장할 폴더의 경로
    # class_index: 클래스의 인덱스 (0부터 시작)
    # output_folder: YOLO 포맷의 어노테이션 파일들을 저장할 폴더의 경로

    for filename in os.listdir(image_folder):
        if filename.endswith(".jpg") or filename.endswith(".png"):
            image_path = os.path.join(image_folder, filename)
            annotation_path = os.path.join(annotation_folder, filename.replace(".jpg", ".txt").replace(".png", ".txt"))

            # 이미지의 폭과 높이 얻기
            img = cv2.imread(image_path)
            height, width, _ = img.shape

            # 라벨링 정보 계산 및 파일에 저장
            with open(annotation_path, 'w') as annotation_file:
                # 예시: 클래스 0, 중심 좌표 (0.5, 0.5), 크기 (0.2, 0.3)
                annotation_file.write(f"{class_index} {0.5} {0.5} {0.2} {0.3}")

if __name__ == "__main__":
    # 사용자가 설정해야 하는 변수들
    image_folder = "/home/kyunsu/some/directory/output_folder_1"
    annotation_folder = "/home/kyunsu/some/directory/output_folder_1"
    class_index = 0  # 클래스 인덱스 (0부터 시작)
    output_folder = "/home/kyunsu/some/directory/output_folder_1"

    # YOLO 포맷으로 변환하는 함수 호출
    convert_to_yolo_format(image_folder, annotation_folder, class_index, output_folder)

    #이미 설정이 완료되어 필요없는 파일은 삭제하였습니다.